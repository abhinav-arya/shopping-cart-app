{"version":3,"sources":["components/Search.jsx","components/Header.jsx","actions/ShoppingListActions.js","actions/ActionTypes.js","api/MyJsonDataService.js","components/Filter.jsx","components/ShoppingList.jsx","components/ShoppingCart.jsx","ShoppingApp.js","reducers/ShoppingAppReducer.js","serviceWorker.js","index.js"],"names":["Search","props","className","value","to","pathname","params","search","searchKey","Header","handleInputChange","event","setState","target","state","id","type","placeholder","aria-label","onChange","this","React","Component","addCartQnty","itemSet","reduceCartQnty","removeCartItem","fetchShoppingListSuccess","response","fetchShoppingListFailure","error","addToCartComplete","fetchShoppingListPending","fetchShoppingList","dispatch","Promise","resolve","reject","$","ajax","url","format","cache","success","then","catch","addToCart","addCartQuantity","reduceCartQuantity","removeFromCart","Filter","componentDidUpdate","prevState","maxValue","Math","max","shopState","items","map","item","price","minSelectedValue","filterUpdated","min","maxSelectedValue","filterToggle","itemsFetchSuccess","length","minValue","formatLabel","step","connect","ShoppingList","handleFilterToggle","filterRange","filterRangeRecieved","handleClick","actions","componentDidMount","searchMode","location","itemsFetchPending","itemsFetchFailure","itemsFetchError","itemList","searchFlag","title","toLowerCase","key","src","img","alt","intl","CURRENCY","IN","onClick","bindActionCreators","ShoppingListActions","ShoppingCart","reduceQuantity","quantity","addQuantity","removeIndex","forEach","index","splice","totalPrice","totalDiscount","element","discount","cartItems","addedItems","ShoppingApp","exact","path","component","initState","totalAmount","ShoppingAppReducer","action","newItem","find","itemExists","fetchediItems","name","img_url","responseJSON","message","Boolean","window","hostname","match","store","createStore","applyMiddleware","thunk","logger","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"+7BAWeA,EARA,SAAEC,GACb,OACI,4BAAQC,UAAU,uCAAuCC,MAAM,UAC3D,kBAAC,IAAD,CAAMC,GAAI,CAAEC,SAAU,UAAWC,OAAO,CAACC,OAAQN,EAAMO,aAAa,uBAAGN,UAAU,qBCkC9EO,E,kDAlCX,aAAe,IAAD,8BACV,gBAMJC,kBAAoB,SAACC,GACjB,EAAKC,SAAS,CACVJ,UAAWG,EAAME,OAAOV,SAP5B,EAAKW,MAAQ,CACTN,UAAW,IAHL,E,qDAcV,OACI,yBAAKN,UAAU,8BACX,yBAAKA,UAAU,aACX,kBAAC,IAAD,CAAME,GAAG,IAAIF,UAAU,gBACnB,uBAAGA,UAAU,0BADjB,gBAKA,0BAAMA,UAAU,4BACZ,2BAAOa,GAAG,cAAcb,UAAU,uBAC1Bc,KAAK,SAASC,YAAY,SAASC,aAAW,cAAcC,SAAUC,KAAKV,oBACnF,kBAAC,EAAD,CAAQF,UAAWY,KAAKN,MAAMN,YAC9B,kBAAC,IAAD,CAAMJ,GAAG,kBAAiB,uBAAGF,UAAU,2C,GA5B1CmB,IAAMC,W,yBCOpB,IAAMC,EAAc,SAACC,GACxB,MAAO,CAAER,KCRoB,oBDQKQ,YAGzBC,EAAiB,SAACD,GAC3B,MAAO,CAAER,KCXuB,uBDWKQ,YAG5BE,EAAiB,SAACF,GAC3B,MAAO,CAAER,KCdmB,mBDcKQ,YAGxBG,EAA2B,SAACC,GACrC,MAAO,CAAEZ,KCvB4B,4BDuBKY,aAGjCC,EAA2B,SAACC,GACrC,MAAO,CAAEd,KC1B4B,4BD0BKc,UAGjCC,EAAoB,SAAChB,GAC9B,MAAO,CAAEC,KChCc,cDgCKD,OAGnBiB,EAA2B,WACpC,MAAO,CAAEhB,KCjC4B,8BDoC5BiB,EAAoB,WAC7B,OAAO,SAACC,GAEJ,OEtCG,IAAIC,SAAQ,SAACC,EAASC,GACzBC,IAAEC,KAAK,CACHvB,KAAM,MACNwB,IAAK,oCACLC,OAAQ,OACRC,OAAO,EACPC,QAAS,SAACf,GACNQ,EAAQR,IAEZE,MAAO,SAACA,GACJO,EAAOP,SF8BNc,MAAK,SAAChB,GACHM,EAASP,EAAyBC,OAErCiB,OAAM,SAACf,GACJI,EAASL,EAAyBC,SAMzCgB,EAAY,SAAC/B,GACtB,OAAO,SAACmB,GACJA,EAASH,EAAkBhB,MAItBgC,EAAkB,SAACvB,GAC5B,OAAO,SAACU,GACJA,EAASX,EAAYC,MAIhBwB,EAAqB,SAACxB,GAC/B,OAAO,SAACU,GACJA,EAAST,EAAeD,MAInByB,EAAiB,SAACzB,GAC3B,OAAO,SAACU,GACJA,EAASR,EAAeF,M,yBGtE1B0B,E,kDAEF,WAAYjD,GAAQ,IAAD,8BACf,cAAMA,IAWVkD,mBAAqB,SAACC,EAAWnD,GAK7B,IAAIoD,EAAWC,KAAKC,IAAL,MAAAD,KAAI,YAAQ,EAAKrD,MAAMuD,UAAUC,MAAMC,KAAI,SAAAC,GAAI,OAAIA,EAAKC,WACnEC,EAAmB,EAAK/C,MAAMgD,cAAgB,EAAKhD,MAAMX,MAAM4D,IAAM,EACrEC,EAAmB,EAAKlD,MAAMgD,cAAgB,EAAKhD,MAAMX,MAAMoD,IAAMF,EACzE,EAAKpD,MAAMgE,aAAaJ,EAAkBG,GAEtC,EAAK/D,MAAMuD,UAAUU,mBAAqB,EAAKjE,MAAMuD,UAAUC,MAAMU,OAAS,IAAM,EAAKrD,MAAMgD,eAC/F,EAAKlD,SAAS,CACVT,MAAO,CACH4D,IAAKF,EACLN,IAAKS,GAETX,SAAUA,EACVS,eAAe,KA3BvB,EAAKhD,MAAQ,CACTX,MAAO,CACH4D,IAAK,EACLR,IAAK,KAETF,SAAU,IACVS,eAAe,GARJ,E,kEAkCGV,EAAWnD,GAC7B,OAAIA,EAAMuD,YAAcJ,EAAUI,Y,+BAM5B,IAAD,OACL,OAAIpC,KAAKnB,MAAMuD,UAAUU,mBAAqB9C,KAAKnB,MAAMuD,UAAUC,MAAMU,OAAS,EAE1E,oCACI,+CACA,kBAAC,IAAD,CACId,SAAUjC,KAAKN,MAAMuC,SACrBe,SAAU,EACVC,YAAa,SAAAlE,GAAK,oBAAWA,IAC7BmE,KAAM,GACNnE,MAAOiB,KAAKN,MAAMX,MAClBgB,SAAU,SAAAhB,GAAK,OAAI,EAAKS,SAAS,CAAET,cAMxC,S,GA5DEkB,IAAMC,WAuEZiD,eANS,SAACzD,GACrB,MAAO,CACH0C,UAAW1C,KAIJyD,CAAyBrB,G,eCpElCsB,E,kDAEF,WAAYvE,GAAQ,IAAD,8BACf,cAAMA,IAWVwE,mBAAsB,SAACV,EAAKR,GACxB,EAAK3C,SAAS,CACV8D,YAAa,CACTX,IAAKA,EACLR,IAAKA,GAEToB,qBAAqB,KAlBV,EAuBnBC,YAAc,SAAC7D,GACX,EAAKd,MAAM4E,QAAQ/B,UAAU/B,IAxBd,EA4BnB+D,kBAAoB,WAChB,EAAK7E,MAAM4E,QAAQ5C,qBA3BnB,EAAKnB,MAAQ,CACT4D,YAAa,CACTX,IAAK,EACLR,IAAK,GAEToB,qBAAqB,GAPV,E,qDAgCT,IAAD,OACDI,EAAc3D,KAAKnB,MAAM+E,SAAS1E,QAAUc,KAAKnB,MAAM+E,SAAS1E,OAAOC,OAAO4D,OAAO,EACzF,GAAI/C,KAAKnB,MAAMgF,kBACX,OACI,6BACI,6BACA,gDAIZ,GAAI7D,KAAKnB,MAAMiF,kBACX,OACI,6BACI,6BACA,6DAAkC,gDAAsB9D,KAAKnB,MAAMkF,gBAAjC,OAI9C,IAAIC,EAAWhE,KAAKnB,MAAMwD,MAAMC,KAAI,SAAAC,GAChC,IAAI0B,GAAaN,GAAcpB,EAAK2B,MAAMC,gBAAkB,EAAKtF,MAAM+E,SAAS1E,OAAOC,OAAOgF,cAC9F,OAAI,EAAKzE,MAAM6D,qBAAuB,EAAK7D,MAAM4D,YAAYX,KAAOJ,EAAKC,OACrE,EAAK9C,MAAM4D,YAAYnB,KAAOI,EAAKC,OAASyB,EAExC,yBAAKnF,UAAU,OAAOsF,IAAK7B,EAAK5C,IACxB,yBAAK0E,IAAK9B,EAAK+B,IAAKC,IAAKhC,EAAK2B,QAC9B,0BAAMpF,UAAU,cAAcyD,EAAK2B,OACnC,yBAAKpF,UAAU,gBACX,2BAAG,qCAAW0F,EAAKC,SAASC,GAAzB,IAA8BnC,EAAKC,SAE1C,4BAAQ5C,KAAK,SAAS+E,QAAS,WAAK,EAAKnB,YAAYjB,EAAK5C,KAAMb,UAAU,gCAA1E,gBAKL,QAIf,OACI,yBAAKA,UAAU,qCACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,yBACX,kBAAC,EAAD,CAAQ+D,aAAc7C,KAAKqD,sBAE/B,yBAAKvE,UAAU,gBACVkF,S,GA/EE/D,IAAMC,WAuGlBiD,mBAhBS,SAACzD,GACrB,MAAO,CACH2C,MAAO3C,EAAM2C,MACbwB,kBAAmBnE,EAAMmE,kBACzBf,kBAAmBpD,EAAMoD,kBACzBgB,kBAAmBpE,EAAMoE,kBACzBC,gBAAiBrE,EAAMqE,oBAI/B,SAA4BjD,GACxB,MAAO,CACH2C,QAASmB,YAAmBC,EAAqB/D,MAI1CqC,CAA6CC,GCvGtD0B,E,4MAEFC,eAAiB,SAACpF,GACd,IAAIS,EAAU,EAAKvB,MAAMwD,MAAMC,KAAI,SAAAC,GAI/B,OAHI5C,IAAO4C,EAAK5C,IAAM4C,EAAKyC,SAAW,IAClCzC,EAAKyC,UAAY,GAEdzC,KAGX,EAAK1D,MAAM4E,QAAQ7B,mBAAmBxB,I,EAG1C6E,YAAc,SAACtF,GACX,IAAIS,EAAU,EAAKvB,MAAMwD,MAAMC,KAAI,SAAAC,GAI/B,OAHI5C,IAAO4C,EAAK5C,KACZ4C,EAAKyC,UAAY,GAEdzC,KAEX,EAAK1D,MAAM4E,QAAQ9B,gBAAgBvB,I,EAGvCyB,eAAiB,SAAClC,GACd,IAAIuF,GAAe,EAOnB,GANA,EAAKrG,MAAMwD,MAAM8C,SAAQ,SAAC5C,EAAM6C,GACxBzF,IAAO4C,EAAK5C,KACZuF,EAAcE,OAID,IAAjBF,EAAoB,CACpB,IAAI9E,EAAU,EAAKvB,MAAMwD,MACzBjC,EAAQiF,OAAOH,EAAa,GAC5B,EAAKrG,MAAM4E,QAAQ5B,eAAezB,K,uDAIjC,IAAD,OAEAkF,EAAa,EACbC,EAAgB,EACpBvF,KAAKnB,MAAMwD,MAAM8C,SAAQ,SAACK,GACtBF,GAAeE,EAAQhD,MAAQgD,EAAQR,SACvCO,GAAkBC,EAAQC,SAAWD,EAAQR,YAEjD,IAAIU,EAAY1F,KAAKnB,MAAMwD,MAAMU,OAEzB/C,KAAKnB,MAAMwD,MAAMC,KAAI,SAAAC,GACjB,OACI,wBAAIzD,UAAU,4BAA4BsF,IAAK7B,EAAK5C,IAChD,yBAAKb,UAAU,YACX,yBAAKuF,IAAK9B,EAAK+B,IAAKC,IAAKhC,EAAK+B,IAAKxF,UAAU,KAC7C,yBAAKA,UAAU,aACX,0BAAMA,UAAU,SAASyD,EAAK2B,OAC9B,2BAAG,qCAAWM,EAAKC,SAASC,GAAInC,EAAKC,QACrC,uCACA,yBAAK1D,UAAU,cACX,kBAAC,IAAD,CAAME,GAAG,iBAAiB2F,QAAS,kBAAM,EAAKI,eAAexC,EAAK5C,MAAK,uBAAGb,UAAU,yBACpF,2BAAIyD,EAAKyC,UACT,kBAAC,IAAD,CAAMhG,GAAG,iBAAiB2F,QAAS,kBAAM,EAAKM,YAAY1C,EAAK5C,MAAK,uBAAGb,UAAU,0BAGzF,4BAAQA,UAAU,sCAAsCc,KAAK,SAAS+E,QAAS,kBAAM,EAAK9C,eAAeU,EAAK5C,MAA9G,eAMhB,wDAA6B,kBAAC,IAAD,CAAMX,GAAG,KAAT,sBAGtC,OACK,yBAAKF,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,iBACX,kDACA,wBAAIA,UAAU,cACT4G,IAGT,yBAAK5G,UAAU,6BACX,6CACA,wBAAIA,UAAU,uBACd,uCAAa0F,EAAKC,SAASC,GAAIY,GAC/B,0CAAgBd,EAAKC,SAASC,GAAIa,GAClC,wBAAIzG,UAAU,eACd,4BAAI,8CAAoB0F,EAAKC,SAASC,GAAIY,EAAaC,W,GAvFpDtF,IAAMC,WA2GlBiD,mBAZU,SAAAzD,GACrB,MAAO,CACH2C,MAAO3C,EAAMiG,eAIrB,SAA4B7E,GACxB,MAAO,CACH2C,QAASmB,YAAmBC,EAAqB/D,MAI1CqC,CAA6C2B,G,QC3F7Cc,MAff,WACE,OACE,kBAAC,IAAD,KACE,yBAAK9G,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO+G,OAAK,EAACC,KAAK,IAAIC,UAAW3C,IACjC,kBAAC,IAAD,CAAO0C,KAAK,iBAAiBC,UAAWjB,IACxC,kBAAC,IAAD,CAAOgB,KAAK,UAAUC,UAAW3C,Q,OCNrC4C,EAAY,CACd3D,MAAO,GACPwB,mBAAmB,EACnBf,mBAAmB,EACnBgB,mBAAmB,EACnBC,gBAAiB,GACjBT,YAAa,CACTX,IAAK,EACLR,IAAK,GAETwD,WAAW,GACXM,YAAa,GAyFFC,EAtFY,WAAgC,IAA/BxG,EAA8B,uDAAtBsG,EAAWG,EAAW,uCACtD,OAAQA,EAAOvG,MACX,IN1BmB,cM2Bf,IAAIwG,EAAU1G,EAAM2C,MAAMgE,MAAK,SAAA9D,GAAI,OAC/BA,EAAK5C,KAAOwG,EAAOxG,MAGnB2G,EAAa5G,EAAMiG,WAAWU,MAAK,SAAA9D,GAAI,OACvCA,EAAK5C,KAAOyG,EAAQzG,MAGxB,OAAI2G,GACAF,EAAQpB,UAAY,EACb,eACAtF,EADP,CAEIuG,YAAavG,EAAMuG,YAAcG,EAAQ5D,UAI7C4D,EAAQpB,SAAW,EACZ,eACAtF,EADP,CAEIiG,WAAW,GAAD,mBAAMjG,EAAMiG,YAAZ,CAAwBS,IAClCH,YAAavG,EAAMuG,YAAcG,EAAQ5D,SAIrD,INlDiC,4BMmD7B,IAAI+D,EAAgBJ,EAAO3F,SAAS8B,KAAI,SAAAC,GAAI,MACxC,CACI5C,GAAI4C,EAAK5C,GACTuE,MAAO3B,EAAKiE,KACZhE,MAAOD,EAAKC,MACZ8B,IAAK/B,EAAKkE,QACVhB,SAAUlD,EAAKkD,aAGvB,OAAO,eACA/F,EADP,CAEIoD,mBAAmB,EACnBiB,iBAAiB,EACjBF,mBAAmB,EACnBxB,MAAOkE,IAGf,INnEiC,4BMoE7B,OAAO,eACA7G,EADP,CAEIoD,mBAAmB,EACnBgB,mBAAmB,EACnBD,mBAAmB,EACnBE,gBAAiBoC,EAAOzF,MAAMgG,aAAeP,EAAOzF,MAAMgG,aAAaC,QAAU,6BAGzF,IN3EiC,4BM4E7B,OAAO,eACAjH,EADP,CAEIoE,mBAAmB,EACnBhB,mBAAkB,EAClBe,mBAAmB,IAG3B,INlFyB,oBMwFzB,INvF4B,uBM8F5B,IN7FwB,mBM8FpB,OAAO,eACAnE,EADP,CAEIiG,WAAYQ,EAAO/F,UAI3B,QAAS,OAAOV,I,MC9FJkH,QACW,cAA7BC,OAAOjD,SAASkD,UAEe,UAA7BD,OAAOjD,SAASkD,UAEhBD,OAAOjD,SAASkD,SAASC,MACvB,2D,6BCPAC,EAAQC,YAAYf,EAAoBgB,YAAgBC,IAAOC,MAErEC,IAASC,OACP,kBAAC,IAAD,CAAUN,MAAOA,GACf,kBAAC,IAAMO,WAAP,KACE,kBAAC,EAAD,QAGJC,SAASC,eAAe,SDgHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBpG,MAAK,SAAAqG,GACJA,EAAaC,gBAEdrG,OAAM,SAAAf,GACLqH,QAAQrH,MAAMA,EAAMiG,c","file":"static/js/main.06be5b89.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst Search = ( props ) => {\n    return (\n        <button className=\"btn btn-outline-success my-2 my-sm-0\" value=\"Search\" > \n            <Link to={{ pathname: '/lookup', params:{search: props.searchKey}}}><i className=\"fas fa-search\"></i></Link>\n        </button>\n    )\n}\n\nexport default Search","import React from 'react';\nimport { Link } from 'react-router-dom'\nimport Search from './Search'\n\nclass Header extends React.Component {\n\n    constructor() {\n        super()\n        this.state = {\n            searchKey: ''\n        }\n    }\n\n    handleInputChange = (event) => {\n        this.setState({\n            searchKey: event.target.value\n        })\n    }\n\n    render() {\n        return(\n            <nav className=\"navbar navbar-dark bg-dark\">\n                <div className=\"container\">\n                    <Link to=\"/\" className=\"navbar-brand\">\n                        <i className=\"fas fa-star shop-icon\"></i>\n                        The ShopKart\n                    </Link>\n                    \n                    <span className=\"form-inline my-2 my-lg-0\">\n                        <input id=\"search-text\" className=\"form-control mr-sm-2\" \n                                type=\"search\" placeholder=\"Search\" aria-label=\"Search Item\" onChange={this.handleInputChange}></input>\n                        <Search searchKey={this.state.searchKey}/>\n                        <Link to=\"/shopping-cart\"><i className=\"fas fa-shopping-cart cart-icon\"></i></Link>\n                    </span>\n                </div>\n            </nav>  \n        )\n    }\n}\n\nexport default Header;","import {\n    ADD_TO_CART,\n    ADD_CART_QUANTITY,\n    REDUCE_CART_QUANTITY,\n    REMOVE_FROM_CART,\n    GET_SHOPPING_LIST_SUCCESS,\n    GET_SHOPPING_LIST_FAILURE,\n    GET_SHOPPING_LIST_PENDING\n} from './ActionTypes'\nimport getShoppingList from '../api/MyJsonDataService'\n\nexport const addCartQnty = (itemSet) => {\n    return { type: ADD_CART_QUANTITY, itemSet}\n}\n\nexport const reduceCartQnty = (itemSet) => {\n    return { type: REDUCE_CART_QUANTITY, itemSet }\n}\n\nexport const removeCartItem = (itemSet) => {\n    return { type: REMOVE_FROM_CART, itemSet }\n}\n\nexport const fetchShoppingListSuccess = (response) => {\n    return { type: GET_SHOPPING_LIST_SUCCESS, response }\n}\n\nexport const fetchShoppingListFailure = (error) => {\n    return { type: GET_SHOPPING_LIST_FAILURE, error}\n}\n\nexport const addToCartComplete = (id) => {\n    return { type: ADD_TO_CART, id }\n}\n\nexport const fetchShoppingListPending = () => {\n    return { type: GET_SHOPPING_LIST_PENDING }\n}\n\nexport const fetchShoppingList = () => {\n    return (dispatch) => {\n        // dispatch(fetchShoppingListPending())\n        return (\n            getShoppingList()\n                .then((response) => {\n                    dispatch(fetchShoppingListSuccess(response))\n                })\n                .catch((error) => {\n                    dispatch(fetchShoppingListFailure(error))\n                })\n        )\n    }\n}\n\nexport const addToCart = (id) => {\n    return (dispatch) => {\n        dispatch(addToCartComplete(id))\n    }\n}\n\nexport const addCartQuantity = (itemSet) => {\n    return (dispatch) => {\n        dispatch(addCartQnty(itemSet))\n    }\n}\n\nexport const reduceCartQuantity = (itemSet) => {\n    return (dispatch) => {\n        dispatch(reduceCartQnty(itemSet))\n    }\n}\n\nexport const removeFromCart = (itemSet) => {\n    return (dispatch) => {\n        dispatch(removeCartItem(itemSet))\n    }\n}\n","export const ADD_TO_CART = 'ADD_TO_CART'\nexport const GET_SHOPPING_LIST_SUCCESS = 'GET_SHOPPING_LIST_SUCCESS'\nexport const GET_SHOPPING_LIST_FAILURE = 'GET_SHOPPING_LIST_FAILURE'\nexport const GET_SHOPPING_LIST_PENDING = 'GET_SHOPPING_LIST_PENDING'\nexport const ADD_CART_QUANTITY = 'ADD_CART_QUANTITY'\nexport const REDUCE_CART_QUANTITY = 'REDUCE_CART_QUANTITY'\nexport const REMOVE_FROM_CART = 'REMOVE_FROM_CART'\n","import $ from 'jquery'\n\n// Get Shopping List data from the service API\nexport default function getShoppingList() {\n    return new Promise((resolve, reject) => {\n        $.ajax({\n            type: 'GET',\n            url: 'https://api.myjson.com/bins/qzuzi',\n            format: 'json',\n            cache: false,\n            success: (response) => {\n                resolve(response)\n            },\n            error: (error) => {\n                reject(error)\n            }\n        })\n    })\n}","import React from 'react'\nimport InputRange from 'react-input-range'\nimport { connect } from 'react-redux'\n\nclass Filter extends React.Component {\n    \n    constructor(props) {\n        super(props)\n        this.state = {\n            value: {\n                min: 0,\n                max: 100\n            },\n            maxValue: 100,\n            filterUpdated: false\n        }\n    }\n\n    componentDidUpdate = (prevState, props) => {\n        \n        // set initial filter values based\n        //   set maximum filter value to the highest price in the item list\n        //   update these values only during init (filterUpdated check), else pick up values from component's state\n        let maxValue = Math.max(...this.props.shopState.items.map(item => item.price))\n        let minSelectedValue = this.state.filterUpdated ? this.state.value.min : 0\n        let maxSelectedValue = this.state.filterUpdated ? this.state.value.max : maxValue\n        this.props.filterToggle(minSelectedValue, maxSelectedValue)\n\n        if (this.props.shopState.itemsFetchSuccess && this.props.shopState.items.length > 0 && !this.state.filterUpdated) {\n            this.setState({\n                value: {\n                    min: minSelectedValue,\n                    max: maxSelectedValue\n                },\n                maxValue: maxValue,\n                filterUpdated: true\n            })\n        }\n    }\n\n    shouldComponentUpdate(prevState, props) {\n        if (props.shopState === prevState.shopState) {\n            return false\n        }\n        return true\n    }\n\n    render() {\n        if (this.props.shopState.itemsFetchSuccess && this.props.shopState.items.length > 0) {\n            return (\n                <>\n                    <h5>Filter by Price</h5>\n                    <InputRange\n                        maxValue={this.state.maxValue}\n                        minValue={0}\n                        formatLabel={value => `Rs. ${value}`}\n                        step={50}\n                        value={this.state.value}\n                        onChange={value => this.setState({ value })}\n                    />\n                </>\n            )\n        }\n        else {\n            return null\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        shopState: state\n    }\n}\n\nexport default connect(mapStateToProps)(Filter)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport * as ShoppingListActions from '../actions/ShoppingListActions'\nimport Filter from './Filter'\nimport { bindActionCreators } from 'redux'\nimport intl from '../locale.json'\n\nclass ShoppingList extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            filterRange: {\n                min: 0,\n                max: 0\n            },\n            filterRangeRecieved: false\n        }\n    }\n\n    // handle change in price filter in the filter component\n    handleFilterToggle = ((min, max) => {\n        this.setState({\n            filterRange: {\n                min: min,\n                max: max\n            },\n            filterRangeRecieved: true\n        })\n    })\n\n    // Update the cart store with the newly added/modified item\n    handleClick = (id) => { \n        this.props.actions.addToCart(id)\n    }\n\n    // Fetch shopping list data from the service and update the redux store\n    componentDidMount = () => {\n        this.props.actions.fetchShoppingList()\n    }\n    \n    render() {\n        let searchMode = (this.props.location.params && this.props.location.params.search.length>3)\n        if (this.props.itemsFetchPending) {\n            return (\n                <div>\n                    <br/>\n                    <h5> Please Wait...</h5>\n                </div>\n            )\n        }\n        if (this.props.itemsFetchFailure) {\n            return (\n                <div>\n                    <br/>\n                    <h5>Oops! Something went wrong... <p>Server Response: \"{this.props.itemsFetchError}\"</p></h5>\n                </div>\n            )\n        }\n        let itemList = this.props.items.map(item=>{\n            let searchFlag = searchMode ? (item.title.toLowerCase() === this.props.location.params.search.toLowerCase()) : true\n            if (this.state.filterRangeRecieved && this.state.filterRange.min <= item.price && \n                this.state.filterRange.max >= item.price && searchFlag) {\n                return(\n                    <div className=\"card\" key={item.id}>\n                            <img src={item.img} alt={item.title}/>\n                            <span className=\"card-title\">{item.title}</span>\n                            <div className=\"card-content\">\n                                <p><b>Price: {intl.CURRENCY.IN} {item.price}</b></p>\n                            </div>\n                            <button type=\"button\" onClick={()=>{this.handleClick(item.id)}} className=\"btn btn-warning btn-add-cart\">Add to Cart</button>\n                     </div>\n                )\n            }\n            else {\n                return null\n            }\n        })\n        \n        return(\n            <div className=\"container container-shopping-list\">\n                <div className=\"row\">\n                    <div className=\"filter-panel col-sm-3\">\n                        <Filter filterToggle={this.handleFilterToggle}/>\n                    </div>\n                    <div className=\"box col-sm-9\">\n                        {itemList}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        items: state.items,\n        itemsFetchPending: state.itemsFetchPending,\n        itemsFetchSuccess: state.itemsFetchSuccess,\n        itemsFetchFailure: state.itemsFetchFailure,\n        itemsFetchError: state.itemsFetchError,\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators(ShoppingListActions, dispatch)\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShoppingList)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport intl from '../locale.json'\nimport { bindActionCreators } from 'redux'\nimport * as ShoppingListActions from '../actions/ShoppingListActions'\n\nclass ShoppingCart extends React.Component {\n\n    reduceQuantity = (id) => {\n        let itemSet = this.props.items.map(item => {\n            if (id === item.id && item.quantity > 1) {\n                item.quantity -= 1\n            }\n            return item\n        })\n\n        this.props.actions.reduceCartQuantity(itemSet)\n    }\n\n    addQuantity = (id) => {\n        let itemSet = this.props.items.map(item => {\n            if (id === item.id) {\n                item.quantity += 1\n            }\n            return item\n        })   \n        this.props.actions.addCartQuantity(itemSet)\n    }\n\n    removeFromCart = (id) => {\n        let removeIndex = -1\n        this.props.items.forEach((item, index) => {\n            if (id === item.id) {\n                removeIndex = index\n            }\n        })\n\n        if (removeIndex !== -1) {\n            let itemSet = this.props.items\n            itemSet.splice(removeIndex, 1)\n            this.props.actions.removeFromCart(itemSet)\n        }\n    }\n\n    render(){\n              \n        let totalPrice = 0\n        let totalDiscount = 0\n        this.props.items.forEach((element) => {\n            totalPrice += (element.price * element.quantity)\n            totalDiscount += (element.discount * element.quantity)\n        })\n        let cartItems = this.props.items.length ?\n            (  \n                this.props.items.map(item=>{\n                    return(\n                        <li className=\"collection-item cart-item\" key={item.id}>\n                            <div className=\"item-img\"> \n                                <img src={item.img} alt={item.img} className=\"\"/>\n                                <div className=\"item-desc\">\n                                    <span className=\"title\">{item.title}</span>\n                                    <p><b>Price: {intl.CURRENCY.IN}{item.price}</b></p> \n                                    <b>Quantity</b>\n                                    <div className=\"add-remove\">\n                                        <Link to=\"/shopping-cart\" onClick={() => this.reduceQuantity(item.id)}><i className=\"far fa-minus-square\"></i></Link>\n                                        <b>{item.quantity}</b> \n                                        <Link to=\"/shopping-cart\" onClick={() => this.addQuantity(item.id)}><i className=\"far fa-plus-square\"></i></Link>\n                                    </div>\n                                </div>\n                                <button className=\"btn btn-danger btn-remove-from-cart\" type=\"submit\" onClick={() => this.removeFromCart(item.id)}>Remove</button>\n                            </div>\n                        </li>                        \n                    )\n                })\n            ) : (\n                <p>Oops! Your cart is empty, <Link to=\"/\">let's fill it up?</Link></p>\n            )\n\n       return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"cart col-sm-8\">\n                        <h5>Your Shopping Bag:</h5>\n                        <ul className=\"collection\">\n                            {cartItems}\n                        </ul>\n                    </div>  \n                    <div className=\"cart col-sm-3 cart-detail\">\n                        <h5>Price Details</h5>\n                        <hr className=\"line--price-detail\"/>\n                        <h6>Price : {intl.CURRENCY.IN}{totalPrice}</h6>\n                        <h6>Discount : {intl.CURRENCY.IN}{totalDiscount}</h6>\n                        <hr className=\"line-price\"/>\n                        <h6><b>Total Payable : {intl.CURRENCY.IN}{totalPrice - totalDiscount}</b></h6>\n                    </div>\n                </div>\n            </div>\n       )\n    }\n}\n\nconst mapStateToProps = (state => {\n    return {\n        items: state.addedItems\n    }\n})\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators(ShoppingListActions, dispatch)\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShoppingCart)","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'react-input-range/lib/css/index.css'\nimport Header from './components/Header'\nimport ShoppingList from './components/ShoppingList'\nimport ShoppingCart from './components/ShoppingCart'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\n\nfunction ShoppingApp() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Header/>\n        <Switch>\n          <Route exact path=\"/\" component={ShoppingList}/>\n          <Route path=\"/shopping-cart\" component={ShoppingCart}/>\n          <Route path=\"/lookup\" component={ShoppingList}/>\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default ShoppingApp;\n","import {\n    ADD_TO_CART,\n    ADD_CART_QUANTITY,\n    REDUCE_CART_QUANTITY,\n    REMOVE_FROM_CART,\n    GET_SHOPPING_LIST_SUCCESS,\n    GET_SHOPPING_LIST_FAILURE,\n    GET_SHOPPING_LIST_PENDING\n} from '../actions/ActionTypes'\n\nconst initState = {\n    items: [],\n    itemsFetchPending: true,\n    itemsFetchSuccess: false,\n    itemsFetchFailure: false,\n    itemsFetchError: '',\n    filterRange: {\n        min: 0,\n        max: 0\n    },\n    addedItems:[],\n    totalAmount: 0\n}\n\nconst ShoppingAppReducer = (state = initState, action) => {\n    switch (action.type) {\n        case ADD_TO_CART: {\n            let newItem = state.items.find(item =>\n                item.id === action.id\n            )\n    \n            let itemExists = state.addedItems.find(item =>\n                item.id === newItem.id\n            )\n    \n            if (itemExists) {\n                newItem.quantity += 1\n                return {\n                    ...state,\n                    totalAmount: state.totalAmount + newItem.price\n                }\n            }\n            else {\n                newItem.quantity = 1\n                return {\n                    ...state,\n                    addedItems: [...state.addedItems, newItem],\n                    totalAmount: state.totalAmount + newItem.price\n                }\n            }\n        };\n        case GET_SHOPPING_LIST_SUCCESS: {\n            let fetchediItems = action.response.map(item => (\n                {\n                    id: item.id,\n                    title: item.name,\n                    price: item.price,\n                    img: item.img_url,\n                    discount: item.discount\n                }\n            )) \n            return {\n                ...state,\n                itemsFetchSuccess: true,\n                itemsFetchError: false,\n                itemsFetchPending: false,\n                items: fetchediItems\n            }\n        }\n        case GET_SHOPPING_LIST_FAILURE: {\n            return {\n                ...state,\n                itemsFetchSuccess: false,\n                itemsFetchFailure: true,\n                itemsFetchPending: false,\n                itemsFetchError: action.error.responseJSON ? action.error.responseJSON.message : \"No Response from the API\"\n            }\n        }\n        case GET_SHOPPING_LIST_PENDING: {\n            return {\n                ...state,\n                itemsFetchFailure: false,\n                itemsFetchSuccess:false,\n                itemsFetchPending: true,\n            }\n        }\n        case ADD_CART_QUANTITY: {\n            return {\n                ...state,\n                addedItems: action.itemSet\n            }\n        }\n        case REDUCE_CART_QUANTITY: {\n            return {\n                ...state,\n                addedItems: action.itemSet\n            }\n\n        }\n        case REMOVE_FROM_CART: {\n            return {\n                ...state,\n                addedItems: action.itemSet\n            }\n        }\n\n        default: return state\n    }\n}\n\nexport default ShoppingAppReducer","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ShoppingApp from './ShoppingApp';\nimport ShoppingAppReducer from './reducers/ShoppingAppReducer'\nimport './index.css'\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\nimport * as serviceWorker from './serviceWorker';\nimport thunk from 'redux-thunk'\nimport logger from 'redux-logger'\n\nconst store = createStore(ShoppingAppReducer, applyMiddleware(thunk, logger))\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <ShoppingApp />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}